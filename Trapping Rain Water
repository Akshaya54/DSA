## Trapping Rain Water

1. Each element represents the height of a bar.
2. You need to compute how much water can be trapped between the bars after raining.
# Example:
Input:  height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6

def trap(height):
    n = len(height)
    # Step 1: Create array to store max height to the left of each bar
    leftMax = [-1] * n
    leftMax[0] = height[0]  # First element has no left, so just assign itself
    for i in range(1, n):
        # Maximum of current height or the previous left maximum
        leftMax[i] = max(leftMax[i - 1], height[i])
    # Step 2: Create array to store max height to the right of each bar
    rightMax = [-1] * n
    rightMax[n - 1] = height[n - 1]  # Last element has no right
    for i in range(n - 2, -1, -1):
        # Maximum of current height or the next right maximum
        rightMax[i] = max(rightMax[i + 1], height[i])
    # Step 3: For each position, find the minimum of leftMax and rightMax
    Min = []
    for i in range(0, n):
        Min.append(min(rightMax[i], leftMax[i]))
    # Step 4: Calculate trapped water at each position
    result = 0
    for i in range(0, n):
        result += Min[i] - height[i]  # Water = min(left, right) - current height
    return result
